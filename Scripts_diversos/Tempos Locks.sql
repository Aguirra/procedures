--Create table tempos (tabela varchar2(30),tl number, data date, unidade varchar2(30));

CREATE OR REPLACE PROCEDURE TEMPOS_LOCKS
IS
 
CURSOR UNIDADELOCKSSEMANA (DT1 DATE, DT2 DATE) IS 
	SELECT COUNT(*) NUM, UNIDADE
  FROM TEMPOS 
  WHERE DATA BETWEEN TO_DATE(DT1,'DD/MM/YYYY') AND TO_DATE(DT2,'DD/MM/YYYY')
  GROUP BY UNIDADE
  ORDER BY 1 DESC;
  
 CURSOR TABELALOCKSSEMANA (DT1 DATE, DT2 DATE) IS 
	SELECT COUNT(*) NUM, TABELA
  FROM TEMPOS 
  WHERE DATA BETWEEN TO_DATE(DT1,'DD/MM/YYYY') AND TO_DATE(DT2,'DD/MM/YYYY')
  GROUP BY TABELA
  ORDER BY 1 DESC;
 
CURSOR LOCKSEMANA (DT1 DATE, DT2 DATE) IS
	SELECT COUNT(*) QTD
	FROM TEMPOS
	WHERE DATA BETWEEN TO_DATE(DT1,'DD/MM/YYYY') AND TO_DATE(DT2,'DD/MM/YYYY');

CURSOR TOTALLOCKSUNIDADE IS
	SELECT COUNT(*) QTD, UNIDADE
	FROM TEMPOS
	GROUP BY UNIDADE
	ORDER BY 1 DESC;

CURSOR TOTALLOCKSTABELA IS
	SELECT COUNT(*) QTD, TABELA
	FROM TEMPOS
	GROUP BY TABELA
	ORDER BY 1 DESC;
	
CURSOR LOCKDIA IS
	SELECT COUNT(*) QTD, DATA
	FROM TEMPOS
	GROUP BY DATA
	ORDER BY DATA;
	
CURSOR C_UNIDADE IS
	SELECT DISTINCT UNIDADE
	FROM TEMPOS
	ORDER BY 1;
	
/*CURSOR QUADRO_GERAL1 IS
	SELECT UNIDADE, 
    COUNT(*) QTD_LOCK_UNIDADE,
    (SELECT COUNT(*) FROM TEMPOS) QTD_LOCK_GERAL,
    ROUND(((COUNT(*)/(SELECT COUNT(*) FROM TEMPOS))*100),2) PERCENTUAL
	FROM TEMPOS
	GROUP BY UNIDADE
	ORDER BY 4 DESC;*/
CURSOR QUADRO_GERAL (DT1 DATE, DT2 DATE) IS
	SELECT UNIDADE, 
    COUNT(*) QTD_LOCK_UNIDADE,
    (SELECT COUNT(*) FROM TEMPOS WHERE DATA BETWEEN TO_DATE(DT1,'DD/MM/YYYY') AND TO_DATE(DT2,'DD/MM/YYYY')) QTD_LOCK_GERAL,
    ROUND(((COUNT(*)/(SELECT COUNT(*) FROM TEMPOS WHERE DATA BETWEEN TO_DATE(DT1,'DD/MM/YYYY') AND TO_DATE(DT2,'DD/MM/YYYY')))*100),2) PERCENTUAL
	FROM TEMPOS
	WHERE DATA BETWEEN TO_DATE(DT1,'DD/MM/YYYY') AND TO_DATE(DT2,'DD/MM/YYYY')
	GROUP BY UNIDADE
	ORDER BY 4 DESC; 

MENOR_DATA DATE;
MAIOR_DATA DATE;
DT_SEMANA1 DATE;
DT_SEMANA2 DATE;
DT_SEM1 DATE;
DT_SEM2 DATE;
DT_SEM1_UNI DATE;
DT_SEM2_UNI DATE;
DT_SEM1_TAB DATE;
DT_SEM2_TAB DATE;
DT_SEM1_UT DATE;
DT_SEM2_UT DATE;
DT_SEM1_GERAL DATE;
DT_SEM2_GERAL DATE;
SOMA_DATA DATE;
ULT_DIA_SEMANA DATE;
CONTA NUMBER :=0;
T NUMBER :=1;
NUM_VOLTA NUMBER :=0;
TOTAL_LOCKS NUMBER :=0;

ARQ_SAIDA UTL_FILE.FILE_TYPE;
NOME_ARQ VARCHAR2(30);
L_SEPARADOR CHAR(1);

BEGIN 

NOME_ARQ := TO_CHAR(SYSDATE,'DDMONYYYYHH24MI')||'.TXT';
ARQ_SAIDA := UTL_FILE.FOPEN('C:/',NOME_ARQ, 'A');
L_SEPARADOR := ';';
	
	IF T = 1 THEN
		SELECT MIN(DATA), MAX(DATA) INTO MENOR_DATA, MAIOR_DATA FROM TEMPOS;
		SELECT NEXT_DAY(DATA,'SATURDAY') INTO ULT_DIA_SEMANA FROM TEMPOS WHERE DATA = MENOR_DATA AND ROWNUM = 1;
		DT_SEMANA1 := MENOR_DATA;
		DT_SEMANA2 := TO_DATE(ULT_DIA_SEMANA,'DD/MM/YYYY');

		DT_SEM1 := MENOR_DATA;
		DT_SEM2 := TO_DATE(ULT_DIA_SEMANA,'DD/MM/YYYY');

		DT_SEM1_TAB := MENOR_DATA;
		DT_SEM2_TAB := TO_DATE(ULT_DIA_SEMANA,'DD/MM/YYYY');

		DT_SEM1_UNI := MENOR_DATA;
		DT_SEM2_UNI := TO_DATE(ULT_DIA_SEMANA,'DD/MM/YYYY');

		DT_SEM1_UT := MENOR_DATA;
		DT_SEM2_UT := TO_DATE(ULT_DIA_SEMANA,'DD/MM/YYYY');
		
		DT_SEM1_GERAL := MENOR_DATA;
		DT_SEM2_GERAL := TO_DATE(ULT_DIA_SEMANA,'DD/MM/YYYY');		

		T := 0;
	END IF;
	
	SELECT ROUND((MAX(DATA) - MIN(DATA))/7) INTO NUM_VOLTA FROM TEMPOS;
	
	
/*	FOR GET_UNI IN C_UNIDADE LOOP
		DECLARE
		CURSOR TABELA_UNIDADE (COD_UNI VARCHAR, DT1 DATE, DT2 DATE) IS
			SELECT COUNT(*) QTD, TABELA, UNIDADE
			FROM TEMPOS
			WHERE UNIDADE = COD_UNI
			AND DATA BETWEEN TO_DATE(DT1,'DD/MM/YYYY') AND TO_DATE(DT2,'DD/MM/YYYY')
			GROUP BY TABELA, UNIDADE
			ORDER BY 3,1 DESC;
		
		BEGIN
			FOR I IN 1..(NUM_VOLTA + 1) LOOP
				DBMS_OUTPUT.PUT_LINE('LOCKS DA SEMANA '||I||' POR TABELA E UNIDADE -  ' || DT_SEM1_UT ||' & '||DT_SEM2_UT||';');
				DBMS_OUTPUT.PUT_LINE('QTD;TABELA;UNIDADE;');
		
				FOR GET_UT IN TABELA_UNIDADE (GET_UNI.UNIDADE, DT_SEM1_UT, DT_SEM2_UT)LOOP
					DBMS_OUTPUT.PUT_LINE(GET_UT.QTD||';'||GET_UT.TABELA||';'||GET_UT.UNIDADE||';');
				END LOOP;
				DT_SEM1_UT := DT_SEM2_UT+1;
				DT_SEM2_UT := DT_SEM2_UT+7;
				IF DT_SEM2_UT > MAIOR_DATA THEN
					DT_SEM2_UT := MAIOR_DATA;
				END IF;
			END LOOP;
		END;
	DT_SEM1_UT := MENOR_DATA;
	DT_SEM2_UT := TO_DATE(ULT_DIA_SEMANA,'DD/MM/YYYY');
	END LOOP;
*/
	
	FOR I IN 1..(NUM_VOLTA + 1) LOOP
		UTL_FILE.PUT_LINE(ARQ_SAIDA,'');
		UTL_FILE.PUT_LINE(ARQ_SAIDA,'LOCKS DA SEMANA '|| DT_SEM1_UNI ||' & '||DT_SEM2_UNI||' POR UNIDADE;');
		UTL_FILE.PUT_LINE(ARQ_SAIDA,'QTD;UNIDADE;');
		--DBMS_OUTPUT.PUT_LINE('LOCKS DA SEMANA '||I||' POR UNIDADE -  ' || DT_SEM1_UNI ||' & '||DT_SEM2_UNI||';');
		--DBMS_OUTPUT.PUT_LINE('QTD;UNIDADE;');
		FOR CARGA IN UNIDADELOCKSSEMANA (DT_SEM1_UNI, DT_SEM2_UNI) LOOP
			UTL_FILE.PUT_LINE(ARQ_SAIDA,CARGA.NUM||';'||CARGA.UNIDADE||';');
			--DBMS_OUTPUT.PUT_LINE(CARGA.NUM||';'||CARGA.UNIDADE||';');
		END LOOP;
		DT_SEM1_UNI := DT_SEM2_UNI+1;
		DT_SEM2_UNI := DT_SEM2_UNI+7;
		IF DT_SEM2_UNI > MAIOR_DATA THEN
		   DT_SEM2_UNI := MAIOR_DATA;
		END IF;
	END LOOP;
	
	
	FOR I IN 1..(NUM_VOLTA + 1) LOOP
		UTL_FILE.PUT_LINE(ARQ_SAIDA,'');
		UTL_FILE.PUT_LINE(ARQ_SAIDA,'LOCKS DA SEMANA '|| DT_SEM1_TAB ||' & '||DT_SEM2_TAB||' POR TABELA;');
		UTL_FILE.PUT_LINE(ARQ_SAIDA,'QTD;TABELA;');
		--DBMS_OUTPUT.PUT_LINE('LOCKS DA SEMANA '||I||' POR TABELA -  ' || DT_SEM1_TAB ||' & '||DT_SEM2_TAB||';');
		--DBMS_OUTPUT.PUT_LINE('QTD;TABELA;');
		FOR CARGA1 IN TABELALOCKSSEMANA (DT_SEM1_TAB, DT_SEM2_TAB) LOOP
			UTL_FILE.PUT_LINE(ARQ_SAIDA,CARGA1.NUM||';'||CARGA1.TABELA||';');
			--DBMS_OUTPUT.PUT_LINE(CARGA1.NUM||';'||CARGA1.TABELA||';');
		END LOOP;
		DT_SEM1_TAB := DT_SEM2_TAB+1;
		DT_SEM2_TAB := DT_SEM2_TAB+7;
		IF DT_SEM2_TAB > MAIOR_DATA THEN
		   DT_SEM2_TAB := MAIOR_DATA;
		END IF;
	END LOOP;
	
	UTL_FILE.PUT_LINE(ARQ_SAIDA,'');
	UTL_FILE.PUT_LINE(ARQ_SAIDA,'TOTAL DE LOCKS NO PERIODO '||(TO_DATE(MENOR_DATA,'DD/MM/YYYY'))||' & '||(TO_DATE(MAIOR_DATA,'DD/MM/YYYY'))||' POR TABELA;');
	UTL_FILE.PUT_LINE(ARQ_SAIDA,'QTD;TABELA;');
	--DBMS_OUTPUT.PUT_LINE('TOTAL DE LOCKS POR TABELA NO PERIODO '||(TO_DATE(MENOR_DATA,'DD/MM/YYYY'))||' & '||(TO_DATE(MAIOR_DATA,'DD/MM/YYYY'))||';');
	--DBMS_OUTPUT.PUT_LINE('QTD;TABELA;');	
	FOR CARGA4 IN TOTALLOCKSTABELA LOOP
		UTL_FILE.PUT_LINE(ARQ_SAIDA,CARGA4.QTD||';'||CARGA4.TABELA||';');
		--DBMS_OUTPUT.PUT_LINE(CARGA4.QTD||';'||CARGA4.TABELA||';');
	
	END LOOP;
	
	UTL_FILE.PUT_LINE(ARQ_SAIDA,'');
	UTL_FILE.PUT_LINE(ARQ_SAIDA,'TOTAL DE LOCKS NO PERIODO '||(TO_DATE(MENOR_DATA,'DD/MM/YYYY'))||' & '||(TO_DATE(MAIOR_DATA,'DD/MM/YYYY'))||' POR UNIDADE;');
	UTL_FILE.PUT_LINE(ARQ_SAIDA,'QTD;UNIDADE;');	
	--DBMS_OUTPUT.PUT_LINE('TOTAL DE LOCKS POR UNIDADE NO PERIODO '||(TO_DATE(MENOR_DATA,'DD/MM/YYYY'))||' & '||(TO_DATE(MAIOR_DATA,'DD/MM/YYYY'))||';');
	--DBMS_OUTPUT.PUT_LINE('QTD;UNIDADE;');	
	FOR CARGA5 IN TOTALLOCKSUNIDADE LOOP
		UTL_FILE.PUT_LINE(ARQ_SAIDA,CARGA5.QTD||';'||CARGA5.UNIDADE||';');
		--DBMS_OUTPUT.PUT_LINE(CARGA5.QTD||';'||CARGA5.UNIDADE||';');
	
	END LOOP;

	UTL_FILE.PUT_LINE(ARQ_SAIDA,'');	
	UTL_FILE.PUT_LINE(ARQ_SAIDA,'TOTAL DE LOCKS POR SEMANA;');
	UTL_FILE.PUT_LINE(ARQ_SAIDA,'QTD;SEMANA;');
	--DBMS_OUTPUT.PUT_LINE('TOTAL DE LOCKS POR SEMANA;');
	--DBMS_OUTPUT.PUT_LINE('QTD;SEMANA;');
	FOR J IN 1..(NUM_VOLTA + 1) LOOP
		FOR CARGA3 IN LOCKSEMANA (DT_SEM1, DT_SEM2) LOOP
			UTL_FILE.PUT_LINE(ARQ_SAIDA,CARGA3.QTD||';'||(TO_CHAR(DT_SEM1,'DD'))||'-'||(TRIM((TO_CHAR(DT_SEM1,'MONTH'))))||' & '||(TO_CHAR(DT_SEM2,'DD'))||'-'||(TRIM((TO_CHAR(DT_SEM2,'MONTH'))))||';');
			--DBMS_OUTPUT.PUT_LINE(CARGA3.QTD||';'||(TO_CHAR(DT_SEM1,'DD'))||'-'||(TRIM((TO_CHAR(DT_SEM1,'MONTH'))))||' & '||(TO_CHAR(DT_SEM2,'DD'))||'-'||(TRIM((TO_CHAR(DT_SEM2,'MONTH'))))||';');
			DT_SEM1 := DT_SEM2+1;
			DT_SEM2 := DT_SEM2+7;
			IF DT_SEM2 > MAIOR_DATA THEN
			   DT_SEM2 := MAIOR_DATA;
			END IF;
		END LOOP;
	END LOOP;
	
	UTL_FILE.PUT_LINE(ARQ_SAIDA,'');
	UTL_FILE.PUT_LINE(ARQ_SAIDA,'TOTAL DE LOCKS POR DIA;');
	UTL_FILE.PUT_LINE(ARQ_SAIDA,'QTD;DIA;');
	--DBMS_OUTPUT.PUT_LINE('TOTAL DE LOCKS POR DIA;');
	--DBMS_OUTPUT.PUT_LINE('QTD;DIA;');
	FOR CARGA2 IN LOCKDIA LOOP
		UTL_FILE.PUT_LINE(ARQ_SAIDA,CARGA2.QTD||';'||CARGA2.DATA||';');
		--DBMS_OUTPUT.PUT_LINE(CARGA2.QTD||';'||CARGA2.DATA||';');
	END LOOP;
	
	FOR I IN 1..(NUM_VOLTA + 1) LOOP	
		UTL_FILE.PUT_LINE(ARQ_SAIDA,'');
		UTL_FILE.PUT_LINE(ARQ_SAIDA,'PERCENTUAL DE LOCKS NO PERIODO '||DT_SEM1_GERAL||' & '||DT_SEM2_GERAL||' POR UNIDADE');
		UTL_FILE.PUT_LINE(ARQ_SAIDA,'UNIDADE;QTD_LOCK_UNIDADE;PERCENTUAL;');	
		FOR CARGA6 IN QUADRO_GERAL (DT_SEM1_GERAL, DT_SEM2_GERAL) LOOP
		UTL_FILE.PUT_LINE(ARQ_SAIDA,CARGA6.UNIDADE||';'||CARGA6.QTD_LOCK_UNIDADE||';'||CARGA6.PERCENTUAL||'%;');
		TOTAL_LOCKS :=CARGA6.QTD_LOCK_GERAL;
		END LOOP;
		UTL_FILE.PUT_LINE(ARQ_SAIDA,'TOTAL DE LOCKS;'||TOTAL_LOCKS||';');
	
		DT_SEM1_GERAL := DT_SEM2_GERAL+1;
		DT_SEM2_GERAL := DT_SEM2_GERAL+7;
		IF DT_SEM2_GERAL > MAIOR_DATA THEN
		   DT_SEM2_GERAL := MAIOR_DATA;
		END IF;
		
	END LOOP;
	UTL_FILE.FCLOSE(ARQ_SAIDA);
END TEMPOS_LOCKS;
/

set serveroutput on
alter session set NLS_DATE_FORMAT = "DD/MM/YYYY";
begin
tempos_locks;
end;
/



/*
--criar no informix--
--CREATE TEMP TABLE TEMPOS (TABELA VARCHAR(30), MINUTOS INT,DATA DATE, UNIDADE VARCHAR(30)) WITH NO LOG
select min(data), max(data) from tempos

select unidade,
       count(*)qtd_de_locks, 
       (select count(*) from tempos) Qtd_Total_Locks,
       round(((count(*)/(select count(*) from tempos))*100),2)Percentual,
       round(avg(minutos))Tempo_Medio_Lock, 
       sum(minutos) Tempo_Total_de_Lock
from tempos 
group by unidade order by 2 desc

select count(*), tabela from tempos group by tabela order by 1 desc
select count(*), tabela, 'Abril' from tempos where data between '01/04/2015' and '30/04/2015' group by tabela order by 1 desc
select count(*), tabela, 'Maio' from tempos where data between '01/05/2015' and '31/05/2015' group by tabela order by 1 desc

select unidade, count(*)from tempos where data between '01/04/2015' and '30/04/2015' group by unidade order by unidade desc
select unidade, count(*)from tempos where data between '01/05/2015' and '31/05/2015' group by unidade order by unidade desc
select count(*), unidade from tempos group by unidade order by unidade desc
*/